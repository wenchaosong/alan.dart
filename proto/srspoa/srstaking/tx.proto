syntax = "proto3";
package srspoa.srstaking;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "sc_chain/x/srstaking/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateEvidence(MsgCreateEvidence) returns (MsgCreateEvidenceResponse);
  rpc UpdateEvidence(MsgUpdateEvidence) returns (MsgUpdateEvidenceResponse);
  rpc DeleteEvidence(MsgDeleteEvidence) returns (MsgDeleteEvidenceResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateEvidence {
  option (gogoproto.equal)            = true;
  string creator = 1;
  //证据id
  int64 evidenceId = 2;
  //文章id
  int64 articleId = 3;
  //文章标题
  string articleTitle = 4;
  //文章创建时间
  string articleCreatedAt = 5;
  //文章更新时间
  string articleUpdatedAt = 6;
  //章节名
  string chapterName = 7;
  //章节id
  int64 chapterId = 8;
  //章节标题
  string chapterTitle = 9;
  //章节版本
  int64 chapterVersion = 10;
  //章节段落数
  int64 paragraphCount = 11;
  //章节字数
  int64 wordCount = 12;
  //章节创作时长
  int64 writeDuration = 13;
  //章节修改时长
  int64 modifyDuration = 14;
  //章节复制次数
  int64 copyCount = 15;
  //章节粘贴次数
  int64 pastCount = 16;
  //章节粘贴字数
  int64 pastWordCount = 17;
  //章节创建时间
  string chapterCreatedAt = 18;
  //章节更新时间
  string chapterUpdatedAt = 19;
  //用户id
  int64 userId = 20;
  //app用户id
  string appUserId = 21;
  //用户平台id
  string platformUserId = 22;
  //用户笔名
  string pseudonym = 23;
  //ipfs路径
  string ipfsPath = 24;
}

message MsgCreateEvidenceResponse {
}

message MsgUpdateEvidence {
  option (gogoproto.equal)            = true;
  string creator = 1;
  int64 userId = 2;
  int64 evidenceId = 3;
}

message MsgUpdateEvidenceResponse {
}

message MsgDeleteEvidence {
  string creator = 1;
  int64 userId = 2;
  int64 evidenceId = 3;
}

message MsgDeleteEvidenceResponse {
}

// this line is used by starport scaffolding # proto/tx/message
